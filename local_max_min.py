# -*- coding: utf-8 -*-
"""A quick tool to find all local maximums and minimums.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZvaVPk3Yl18CPidXKgqWI0cBrtjoB47S

# A quick tool to find all local maximums and minimums
Jeremy Gillbanks, 2021

##Instructions
1. Ensure python is installed.
2. Ensure pip is installed. python get-pip.py
3. Ensure virtualenv is installed. 
3.a Create virtualenv: virtualenv venv
4. Activate virtualenv: .\venv\Scripts\activate; 
5. Ensure all files are available: pip install -r requirements.txt
6. Run this program: python filepath/to/local_max_min.py filepath/to/txtfile.txt
7. Deactivate the virtualenv: deactivate
"""
import sys, io
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.signal import argrelextrema

def peak_finder(df, col, n = 600):# Find local peaks

    # n is the number of points to check before and after

    # Find local peaks
    df = df.groupby((df[col] != df[col].shift()).cumsum().values).first() # Remove the repeat values
    df['min'] = df.iloc[argrelextrema(df[col].values, np.less_equal,
                    order=n)[0]][col]
    df['max'] = df.iloc[argrelextrema(df[col].values, np.greater_equal,
                    order=n)[0]][col]
    return df

if __name__ == '__main__':
    filename = sys.argv[1]
    folder = filename.split("\\")[1:-1]
    filename = filename.split('/')[-1]

    print('Reading txt file:', filename)
    # df = pd.read_excel(filename)
    df = pd.read_csv(filename, delimiter="\t", skiprows=8)
    print('File read.')

    columns = list(df.columns)
    print('Columns found:', columns)

    v = df[columns[:2]] # Slice the necessary parts of the dataframe

    try:
        # Remove text and make floats.
        v[columns[:2]] = v[columns[:2]].apply(pd.to_numeric(v[columns[:2]], errors = 'coerce'))
        v.dropna(inplace=True)
    except KeyError as e:
        print(type(e), e)
        print(v.columns)

    print('Finding the peaks.')
    df = peak_finder(df = v, col = columns[2])
    print("Peaks found.")

    # Return CSV with peaks
    output_file = filename + '.xlsx'
    output_file = folder + output_file
    df.to_excel(output_file)
    print('An output file with the max and min data has been saved to your working directory:', output_file)
    
    plot = 0
    if plot == 1:
        # Plot all results
        plt.scatter(v[columns[0]], v[columns[2]], c = 'k', s = 1)

        # Plot local minima
        plt.scatter(df[columns[0]], df['min'], c = 'c', s = 5)

        # Plot local maxima
        plt.scatter(df[columns[0]], df['max'], c = 'm', s = 5)

        plt.xlabel(columns[0])
        plt.ylabel(columns[1])
        
        plt.show()